package com.omsarma.crud.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.omsarma.crud.entity.Books;
import com.omsarma.crud.repo.BookRepository;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/books")
public class BookController {

	@Autowired
	private BookRepository bookRepository;
	
	@PostMapping
	public Books createBook(@RequestBody Books book) {
		return bookRepository.save(book);
	} 

	@GetMapping
	public List<Books> getAllBooks() {
		List<Books> bookList = bookRepository.findAll();
		System.out.println(bookList);
		
		return bookList;
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Books> getBookById(@PathVariable Long id) throws Exception {
		Books book = bookRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException("Book not found"));
		return ResponseEntity.ok(book);
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<Books> updateBook(@PathVariable Long id,@RequestBody Books bookDetails) throws Exception {
		Books book = bookRepository.findById(id)
		.orElseThrow(() -> new ResourceNotFoundException("Book not found"));
		
		book.setTitle(bookDetails.getTitle());
		book.setAuthor(bookDetails.getAuthor());
		book.setPublishedYear(bookDetails.getPublishedYear());
		book.setGenre(bookDetails.getGenre());return ResponseEntity.ok(bookRepository.save(book));
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<Map<String, Boolean>>deleteBook(@PathVariable Long id) throws Exception {
	Books book = bookRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException("Book notfound"));
	bookRepository.delete(book);
	Map<String, Boolean> response = new HashMap<>();
	response.put("deleted", Boolean.TRUE);
	return ResponseEntity.ok(response);
	}
	
}